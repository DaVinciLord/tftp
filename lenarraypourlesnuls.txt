Bataille navale en N dimension, formalisation :

Espace des combats, tableau de cases de N dimensions : Case[d1][d2]...[dN]
avec di la taille de l'espace dans la ième dimension, pour i de 1à N
Mémorise également la taille pour chaque dimension (un espace 8 * 5 * 2 sera possible)
Le tableau Tailles[1… N] stockera donc d1… dN.

Chaque case sera consultable de deux manières différentes :
Pour tous les joueurs : on obtient un état parmi les suivants : "pas encore ciblé", "dans l'eau", "touché", "coulé".
Pour le joueur dont c'est l'espace : donne une information sur la présence d'un de ses vaisseaux ou non.

Commande : tirer(tableau d'entier de 1 à N)
appelle la commande tirer de la case correspondante aux coordonnées
Renvoie "dans l'eau", "touché" ou "coulé"

Case : Contient une référence au vaisseau placé à cet endroit, ship, qui vaut null s'il n'y a pas de vaisseau.
Contient également un booléen Tir, indiquant si la case a déjà été visée par un tir.

Ces deux informations suffisent à faire la distinction entre 3 états :
- pas encore ciblé
- dans l'eau
- touché/coulé

Pour la distinction entre touché et coulé, il faut voir avec les autres cases occupées par le vaisseau, il est plus simple de passer directement par le vaisseau.

Commande tirer() :
Précondition : Tir = faux

Tir ← vrai
Si ship = null alors
	renvoyer "dans l'eau"
sinon
	renvoyer ship.tirer()
	

Vaisseau : aligné sur des cases de l'espace des combats.
Longueur du vaisseau L. Correspond aux points de vie initiaux du vaisseau PV.
Définition d'un bon placement :
Coordonnées des extrémités, deux tableaux d'entiers de longueur N :
- Proue[1...N]
- Poupe[1...N]

Condition de non-dépassement :
pour i de 1 à N :
1 ≤ Proue[i] ≤ Tailles[i]
1 ≤ Poupe[i] ≤ Tailles[i]

Condition d'alignement et de longueur :
pour i de 1 à N :
Proue[i] = Poupe[i]
OU EXCLUSIF
| Proue[i] - Poupe[i] | + 1 = L pour un unique i qu'on appelle S : Sens du navire.

Condition de non-chevauchement :
soit minS = minimum(Proue[S], Poupe[S])
pour k de 1 à L :
Case[Proue[1]]…[minS + k - 1]…[Proue[N]].ship = null

quand toutes les conditions sont vérifiées, on place le vaisseau :
soit minS = minimum(Proue[S], Poupe[S])
pour k de 1 à L :
Case[Proue[1]]…[minS + k - 1]…[Proue[N]].ship = vaisseau à placer.


Commande tirer()
PV ← PV - 1
si PV = 0 alors
	renvoyer "coulé"
sinon
	renvoyer "touché"

Note : dans ce modèle, le vaisseau ne mémorise pas lesquelles de ses parties sont touchées. Ce n'est pas gênant car on ne peut pas tirer deux fois au même endroit (précondition de tirer() dans Case).


Visualisation pour le mode 3D :

Visualisation couche par couche, dépendant de l'orientation.
Orientations possibles définies par l'Axe orthogonal aux plans visualisés :
Abscisse (longueur x), Ordonnée (largeur y), Cote (hauteur z) sont les noms de dimension pour les dimensions 1, 2 et 3, avec d1 = x, d2 = y, d3 = z.
- Abscisse : x couches orientées par Ordonnée et Cote.
- Ordonnée : y couches orientées par Abscisse et Cote.
- Cote : z couches orientées par Abscisse et Ordonnée.

Note : On peut peut-être définir un plan par son "hyper-axe" dans les cas où N > 3. Chaque hyper-axe serait défini par (N - 2 dimensions), les 2 dimensions non comprises seront celles des plans visualisés.
Le nombre d'hyper-axes possibles sera le nombre de combinaison de 2 dans N.
